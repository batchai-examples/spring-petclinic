{
    "has_issue": false,
    "overall_severity": "",
    "issues": [],
    "fixed_code": "/*\n * Copyright 2012-2019 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.springframework.samples.petclinic.owner;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.format.Formatter;\nimport org.springframework.stereotype.Component;\n\nimport java.text.ParseException;\nimport java.util.Collection;\nimport java.util.Locale;\n\n/**\n * Instructs Spring MVC on how to parse and print elements of type 'PetType'. Starting\n * from Spring 3.0, Formatters have come as an improvement in comparison to legacy\n * PropertyEditors. See the following links for more details: - The Spring ref doc:\n * https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/core.html#format\n *\n * @author Mark Fisher\n * @author Juergen Hoeller\n * @author Michael Isvy\n */\n@Component\npublic class PetTypeFormatter implements Formatter\u003cPetType\u003e {\n\n\tprivate final OwnerRepository owners;\n\n\t@Autowired\n\tpublic PetTypeFormatter(OwnerRepository owners) {\n\t\tthis.owners = owners;\n\t}\n\n\t@Override\n\tpublic String print(PetType petType, Locale locale) {\n\t\treturn petType.getName();\n\t}\n\n\t@Override\n\tpublic PetType parse(String text, Locale locale) throws ParseException {\n\t\tCollection\u003cPetType\u003e findPetTypes = this.owners.findPetTypes();\n\t\tif (findPetTypes == null) {\n\t\t\tthrow new ParseException(\"PetTypes collection is null\", 0);\n\t\t}\n\t\tfor (PetType type : findPetTypes) {\n\t\t\tif (type.getName().equals(text)) {\n\t\t\t\treturn type;\n\t\t\t}\n\t\t}\n\t\tthrow new ParseException(\"type not found: \" + text, 0);\n\t}\n\n}\n",
    "original_code": "/*\n * Copyright 2012-2019 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.springframework.samples.petclinic.owner;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.format.Formatter;\nimport org.springframework.stereotype.Component;\n\nimport java.text.ParseException;\nimport java.util.Collection;\nimport java.util.Locale;\n\n/**\n * Instructs Spring MVC on how to parse and print elements of type 'PetType'. Starting\n * from Spring 3.0, Formatters have come as an improvement in comparison to legacy\n * PropertyEditors. See the following links for more details: - The Spring ref doc:\n * https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/core.html#format\n *\n * @author Mark Fisher\n * @author Juergen Hoeller\n * @author Michael Isvy\n */\n@Component\npublic class PetTypeFormatter implements Formatter\u003cPetType\u003e {\n\n\tprivate final OwnerRepository owners;\n\n\t@Autowired\n\tpublic PetTypeFormatter(OwnerRepository owners) {\n\t\tthis.owners = owners;\n\t}\n\n\t@Override\n\tpublic String print(PetType petType, Locale locale) {\n\t\treturn petType.getName();\n\t}\n\n\t@Override\n\tpublic PetType parse(String text, Locale locale) throws ParseException {\n\t\tCollection\u003cPetType\u003e findPetTypes = this.owners.findPetTypes();\n\t\tif (findPetTypes == null) {\n\t\t\tthrow new ParseException(\"PetTypes collection is null\", 0);\n\t\t}\n\t\tfor (PetType type : findPetTypes) {\n\t\t\tif (type.getName().equals(text)) {\n\t\t\t\treturn type;\n\t\t\t}\n\t\t}\n\t\tthrow new ParseException(\"type not found: \" + text, 0);\n\t}\n\n}\n",
    "path": "src/main/java/org/springframework/samples/petclinic/owner/PetTypeFormatter.java",
    "model_usage_metrics": {
        "Duration": 1471000737,
        "OpenAiUsage": {
            "completion_tokens": 0,
            "prompt_tokens": 0,
            "total_tokens": 0,
            "completion_tokens_details": {
                "accepted_prediction_tokens": 0,
                "audio_tokens": 0,
                "reasoning_tokens": 0,
                "rejected_prediction_tokens": 0
            },
            "prompt_tokens_details": {
                "audio_tokens": 0,
                "cached_tokens": 0
            }
        }
    }
}