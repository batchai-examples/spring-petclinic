{
    "has_issue": false,
    "overall_severity": "",
    "issues": [],
    "fixed_code": "/*\n * Copyright 2012-2019 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.springframework.samples.petclinic.vet;\n\nimport org.springframework.cache.annotation.Cacheable;\nimport org.springframework.dao.DataAccessException;\nimport org.springframework.data.domain.Page;\nimport org.springframework.data.domain.Pageable;\nimport org.springframework.data.repository.Repository;\nimport org.springframework.transaction.annotation.Transactional;\n\nimport java.util.Collection;\n\n/**\n * Repository class for \u003ccode\u003eVet\u003c/code\u003e domain objects All method names are compliant\n * with Spring Data naming conventions so this interface can easily be extended for Spring\n * Data. See:\n * https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#repositories.query-methods.query-creation\n *\n * @author Ken Krebs\n * @author Juergen Hoeller\n * @author Sam Brannen\n * @author Michael Isvy\n */\npublic interface VetRepository extends Repository\u003cVet, Integer\u003e {\n\n\t/**\n\t * Retrieve all \u003ccode\u003eVet\u003c/code\u003es from the data store.\n\t * @return a \u003ccode\u003eCollection\u003c/code\u003e of \u003ccode\u003eVet\u003c/code\u003es\n\t */\n\t@Transactional(readOnly = true)\n\t@Cacheable(\"vets\")\n\tCollection\u003cVet\u003e findAll() throws DataAccessException;\n\n\t/**\n\t * Retrieve all \u003ccode\u003eVet\u003c/code\u003es from data store in Pages\n\t * @param pageable\n\t * @return\n\t * @throws DataAccessException\n\t */\n\t@Transactional(readOnly = true)\n\t@Cacheable(\"vets\")\n\tPage\u003cVet\u003e findAll(Pageable pageable) throws DataAccessException;\n\n}\n",
    "original_code": "/*\n * Copyright 2012-2019 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.springframework.samples.petclinic.vet;\n\nimport org.springframework.cache.annotation.Cacheable;\nimport org.springframework.dao.DataAccessException;\nimport org.springframework.data.domain.Page;\nimport org.springframework.data.domain.Pageable;\nimport org.springframework.data.repository.Repository;\nimport org.springframework.transaction.annotation.Transactional;\n\nimport java.util.Collection;\n\n/**\n * Repository class for \u003ccode\u003eVet\u003c/code\u003e domain objects All method names are compliant\n * with Spring Data naming conventions so this interface can easily be extended for Spring\n * Data. See:\n * https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#repositories.query-methods.query-creation\n *\n * @author Ken Krebs\n * @author Juergen Hoeller\n * @author Sam Brannen\n * @author Michael Isvy\n */\npublic interface VetRepository extends Repository\u003cVet, Integer\u003e {\n\n\t/**\n\t * Retrieve all \u003ccode\u003eVet\u003c/code\u003es from the data store.\n\t * @return a \u003ccode\u003eCollection\u003c/code\u003e of \u003ccode\u003eVet\u003c/code\u003es\n\t */\n\t@Transactional(readOnly = true)\n\t@Cacheable(\"vets\")\n\tCollection\u003cVet\u003e findAll() throws DataAccessException;\n\n\t/**\n\t * Retrieve all \u003ccode\u003eVet\u003c/code\u003es from data store in Pages\n\t * @param pageable\n\t * @return\n\t * @throws DataAccessException\n\t */\n\t@Transactional(readOnly = true)\n\t@Cacheable(\"vets\")\n\tPage\u003cVet\u003e findAll(Pageable pageable) throws DataAccessException;\n\n}\n",
    "path": "src/main/java/org/springframework/samples/petclinic/vet/VetRepository.java",
    "model_usage_metrics": {
        "Duration": 1060522406,
        "OpenAiUsage": {
            "completion_tokens": 0,
            "prompt_tokens": 0,
            "total_tokens": 0,
            "completion_tokens_details": {
                "accepted_prediction_tokens": 0,
                "audio_tokens": 0,
                "reasoning_tokens": 0,
                "rejected_prediction_tokens": 0
            },
            "prompt_tokens_details": {
                "audio_tokens": 0,
                "cached_tokens": 0
            }
        }
    }
}