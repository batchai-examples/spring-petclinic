{
    "has_issue": false,
    "overall_severity": "",
    "issues": [],
    "fixed_code": "/*\n * Copyright 2012-2019 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.springframework.samples.petclinic.owner;\n\nimport java.time.LocalDate;\n\nimport org.springframework.format.annotation.DateTimeFormat;\nimport org.springframework.samples.petclinic.model.BaseEntity;\n\nimport jakarta.persistence.Column;\nimport jakarta.persistence.Entity;\nimport jakarta.persistence.Table;\nimport jakarta.validation.constraints.NotBlank;\n\n/**\n * Simple JavaBean domain object representing a visit.\n *\n * @author Ken Krebs\n * @author Dave Syer\n */\n@Entity\n@Table(name = \"visits\")\npublic class Visit extends BaseEntity {\n\n\t@Column(name = \"visit_date\")\n\t@DateTimeFormat(pattern = \"yyyy-MM-dd\")\n\tprivate LocalDate date;\n\n\t@NotBlank\n\tprivate String description;\n\n\t/**\n\t * Creates a new instance of Visit for the current date\n\t */\n\tpublic Visit() {\n\t\tthis.date = LocalDate.now();\n\t}\n\n\tpublic LocalDate getDate() {\n\t\treturn this.date;\n\t}\n\n\tpublic void setDate(LocalDate date) {\n\t\tthis.date = date;\n\t}\n\n\tpublic String getDescription() {\n\t\treturn this.description;\n\t}\n\n\tpublic void setDescription(String description) {\n\t\tthis.description = description;\n\t}\n\n}\n",
    "original_code": "/*\n * Copyright 2012-2019 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.springframework.samples.petclinic.owner;\n\nimport java.time.LocalDate;\n\nimport org.springframework.format.annotation.DateTimeFormat;\nimport org.springframework.samples.petclinic.model.BaseEntity;\n\nimport jakarta.persistence.Column;\nimport jakarta.persistence.Entity;\nimport jakarta.persistence.Table;\nimport jakarta.validation.constraints.NotBlank;\n\n/**\n * Simple JavaBean domain object representing a visit.\n *\n * @author Ken Krebs\n * @author Dave Syer\n */\n@Entity\n@Table(name = \"visits\")\npublic class Visit extends BaseEntity {\n\n\t@Column(name = \"visit_date\")\n\t@DateTimeFormat(pattern = \"yyyy-MM-dd\")\n\tprivate LocalDate date;\n\n\t@NotBlank\n\tprivate String description;\n\n\t/**\n\t * Creates a new instance of Visit for the current date\n\t */\n\tpublic Visit() {\n\t\tthis.date = LocalDate.now();\n\t}\n\n\tpublic LocalDate getDate() {\n\t\treturn this.date;\n\t}\n\n\tpublic void setDate(LocalDate date) {\n\t\tthis.date = date;\n\t}\n\n\tpublic String getDescription() {\n\t\treturn this.description;\n\t}\n\n\tpublic void setDescription(String description) {\n\t\tthis.description = description;\n\t}\n\n}\n",
    "path": "src/main/java/org/springframework/samples/petclinic/owner/Visit.java",
    "model_usage_metrics": {
        "Duration": 1049925181,
        "OpenAiUsage": {
            "completion_tokens": 0,
            "prompt_tokens": 0,
            "total_tokens": 0,
            "completion_tokens_details": {
                "accepted_prediction_tokens": 0,
                "audio_tokens": 0,
                "reasoning_tokens": 0,
                "rejected_prediction_tokens": 0
            },
            "prompt_tokens_details": {
                "audio_tokens": 0,
                "cached_tokens": 0
            }
        }
    }
}